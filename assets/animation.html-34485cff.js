import{_ as n,V as a,W as s,X as t}from"./framework-1e9ccf99.js";const e={},i=t(`<h2 id="定义动画" tabindex="-1"><a class="header-anchor" href="#定义动画" aria-hidden="true">#</a> 定义动画</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>&lt;!-- 两种状态动画 --&gt;
<span class="token atrule"><span class="token rule">@keyframes</span> 动画名称</span> <span class="token punctuation">{</span>
  <span class="token selector">from</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token selector">to</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
&lt;!-- 多个属性变化 --&gt;
<span class="token atrule"><span class="token rule">@keyframes</span> 动画名称</span> <span class="token punctuation">{</span>
	<span class="token selector">0%</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token selector">10%</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token selector">40%</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token selector">100%</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用动画" tabindex="-1"><a class="header-anchor" href="#使用动画" aria-hidden="true">#</a> 使用动画</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation</span><span class="token punctuation">:</span>动画名称 动画花费时长
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="动画属性" tabindex="-1"><a class="header-anchor" href="#动画属性" aria-hidden="true">#</a> 动画属性</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation</span><span class="token punctuation">:</span>动画名称 动画时长 速度曲线 延迟时间 重复次数 动画方向 执行完毕时状态<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>属性</th><th>作用</th><th>取值</th></tr></thead><tbody><tr><td>animation-name</td><td>动画名称</td><td></td></tr><tr><td>animation-duration</td><td>动画时长</td><td></td></tr><tr><td>animation-delay</td><td>延迟时间</td><td></td></tr><tr><td>animation-fill-mode</td><td>动画执行完毕时状态</td><td>forwards:最后一帧<br>backwards:第一帧状态</td></tr><tr><td>animation-timing-function</td><td>速度曲线</td><td>steps(数字):逐帧动画</td></tr><tr><td>animation-iteration-count</td><td>重复次数</td><td>infinite为无限</td></tr><tr><td>animation-direction</td><td>动画执行方向</td><td>alternate反方向</td></tr><tr><td>animation-play-state</td><td>暂停动画</td><td>paused暂停，通常配合<code>:hover</code>使用</td></tr></tbody></table><ul><li><p>动画名称和动画时长必须赋值</p></li><li><p>取值不分先后顺序</p></li><li><p>如果有两个时间值，第一个时间表示动画时长，第二个时间表示延迟时间</p></li></ul>`,8),d=[i];function c(l,o){return a(),s("div",null,d)}const r=n(e,[["render",c],["__file","animation.html.vue"]]);export{r as default};
