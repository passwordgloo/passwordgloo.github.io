import{_ as e,V as a,W as s,X as n}from"./framework-1e9ccf99.js";const i={},r=n(`<h2 id="合並多個文件" tabindex="-1"><a class="header-anchor" href="#合並多個文件" aria-hidden="true">#</a> 合並多個文件</h2><h3 id="新建文本文件" tabindex="-1"><a class="header-anchor" href="#新建文本文件" aria-hidden="true">#</a> 新建文本文件</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>file 1.ts
file 2.ts
……
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="合並命令" tabindex="-1"><a class="header-anchor" href="#合並命令" aria-hidden="true">#</a> 合並命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-f</span> concat <span class="token parameter variable">-i</span> file.txt <span class="token parameter variable">-c</span> copy outfilename.mp4
ffmpeg <span class="token parameter variable">-f</span> concat <span class="token parameter variable">-safe</span> <span class="token number">0</span> <span class="token parameter variable">-i</span> file.txt <span class="token parameter variable">-c</span> copy outfilename.mp4   //Unsafe <span class="token function">file</span> name報錯
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),t=[r];function l(c,d){return a(),s("div",null,t)}const o=e(i,[["render",l],["__file","ffmpeg.html.vue"]]);export{o as default};
