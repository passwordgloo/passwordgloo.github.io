const t=JSON.parse('{"key":"v-19f6e4a5","path":"/tw/c/order-2.html","title":"順序程序設計（2）","lang":"zh-TW","frontmatter":{"title":"順序程序設計（2）","date":"2022-07-30T00:00:00.000Z","icon":"code","order":8,"description":"19.字符型數據 字符型是以整型形式(ASCII碼)存放在內存單元中。ASCII共128個字符(也就是最多可以用7位數表示) 類型 字符值 取值範圍 signed char 1 -128~127 unsigned char 1 0~255","head":[["meta",{"property":"og:url","content":"https://passwordgloo-github-io.vercel.app/tw/c/order-2.html"}],["meta",{"property":"og:site_name","content":"麦田守望者文档库"}],["meta",{"property":"og:title","content":"順序程序設計（2）"}],["meta",{"property":"og:description","content":"19.字符型數據 字符型是以整型形式(ASCII碼)存放在內存單元中。ASCII共128個字符(也就是最多可以用7位數表示) 類型 字符值 取值範圍 signed char 1 -128~127 unsigned char 1 0~255"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-07-30T00:00:00.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://passwordgloo-github-io.vercel.app/c/order-2.html"}]]},"headers":[{"level":2,"title":"19.字符型數據","slug":"_19-字符型數據","link":"#_19-字符型數據","children":[]},{"level":2,"title":"20.getchar與putchar函數","slug":"_20-getchar與putchar函數","link":"#_20-getchar與putchar函數","children":[]},{"level":2,"title":"21.浮點型數據","slug":"_21-浮點型數據","link":"#_21-浮點型數據","children":[]},{"level":2,"title":"22.printf格式附加字符","slug":"_22-printf格式附加字符","link":"#_22-printf格式附加字符","children":[]},{"level":2,"title":"23.1scanf函數註意事項(2)","slug":"_23-1scanf函數註意事項-2","link":"#_23-1scanf函數註意事項-2","children":[]},{"level":2,"title":"23.2運算符(2)","slug":"_23-2運算符-2","link":"#_23-2運算符-2","children":[]}],"git":{},"readingTime":{"minutes":2.55,"words":765},"filePathRelative":"tw/c/order-2.md","localizedDate":"2022年7月30日","excerpt":"<h2> 19.字符型數據</h2>\\n<blockquote>\\n<p>字符型是以整型形式(ASCII碼)存放在內存單元中。ASCII共128個字符(也就是最多可以用7位數表示)</p>\\n</blockquote>\\n<table>\\n<thead>\\n<tr>\\n<th>類型</th>\\n<th>字符值</th>\\n<th>取值範圍</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>signed char</td>\\n<td>1</td>\\n<td>-128~127</td>\\n</tr>\\n<tr>\\n<td>unsigned char</td>\\n<td>1</td>\\n<td>0~255</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{t as data};
