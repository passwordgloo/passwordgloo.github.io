const n=JSON.parse('{"key":"v-0b8e1e95","path":"/tw/c/design-4.html","title":"程序設計和C語言（4）","lang":"zh-TW","frontmatter":{"title":"程序設計和C語言（4）","date":"2022-07-30T00:00:00.000Z","icon":"code","order":4,"description":"14.全局變量及宏定義 /* 學習目標 (1)宏名，全局變量建議大寫 (2)#開頭的都是預處理指令，預處理是發生在預編譯階段(編譯之前)，對源程序進行壹些簡單的文本替換 (3)全局變量的作用域就是從定義處開始，到整個文件的末尾 */ #include &lt;stdio.h&gt; #define P1 3.1415926 //定義壹個宏名P1，程序會在預編譯階段把該定義出之後的所有的P1地方替換為3.1415926 int A; //未初始化的全局變量A，初始值4的全局變量B int B=4; int main(void) { \\tprintf(\\"%d,%d\\\\n\\",A,B); \\tprintf(\\"P1\\\\n\\"); //\\tP1=10； //error 符號常量P1不能被賦值 \\tprintf(\\"%d,%d\\\\n\\",A,B); \\treturn 0; }","head":[["meta",{"property":"og:url","content":"https://passwordgloo-github-io.vercel.app/tw/c/design-4.html"}],["meta",{"property":"og:site_name","content":"麦田守望者文档库"}],["meta",{"property":"og:title","content":"程序設計和C語言（4）"}],["meta",{"property":"og:description","content":"14.全局變量及宏定義 /* 學習目標 (1)宏名，全局變量建議大寫 (2)#開頭的都是預處理指令，預處理是發生在預編譯階段(編譯之前)，對源程序進行壹些簡單的文本替換 (3)全局變量的作用域就是從定義處開始，到整個文件的末尾 */ #include &lt;stdio.h&gt; #define P1 3.1415926 //定義壹個宏名P1，程序會在預編譯階段把該定義出之後的所有的P1地方替換為3.1415926 int A; //未初始化的全局變量A，初始值4的全局變量B int B=4; int main(void) { \\tprintf(\\"%d,%d\\\\n\\",A,B); \\tprintf(\\"P1\\\\n\\"); //\\tP1=10； //error 符號常量P1不能被賦值 \\tprintf(\\"%d,%d\\\\n\\",A,B); \\treturn 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-07-30T00:00:00.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://passwordgloo-github-io.vercel.app/c/design-4.html"}]]},"headers":[{"level":2,"title":"14.全局變量及宏定義","slug":"_14-全局變量及宏定義","link":"#_14-全局變量及宏定義","children":[]},{"level":2,"title":"15.標識符命名規範","slug":"_15-標識符命名規範","link":"#_15-標識符命名規範","children":[]}],"git":{},"readingTime":{"minutes":1.85,"words":554},"filePathRelative":"tw/c/design-4.md","localizedDate":"2022年7月30日","excerpt":"<h2> 14.全局變量及宏定義</h2>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token comment\\">/*\\n學習目標\\n(1)宏名，全局變量建議大寫\\n(2)#開頭的都是預處理指令，預處理是發生在預編譯階段(編譯之前)，對源程序進行壹些簡單的文本替換\\n(3)全局變量的作用域就是從定義處開始，到整個文件的末尾\\n*/</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdio.h&gt;</span> </span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">define</span> <span class=\\"token macro-name\\">P1</span> <span class=\\"token expression\\"><span class=\\"token number\\">3.1415926</span>   </span><span class=\\"token comment\\">//定義壹個宏名P1，程序會在預編譯階段把該定義出之後的所有的P1地方替換為3.1415926</span></span>\\n\\n<span class=\\"token keyword\\">int</span> A<span class=\\"token punctuation\\">;</span>                 <span class=\\"token comment\\">//未初始化的全局變量A，初始值4的全局變量B</span>\\n<span class=\\"token keyword\\">int</span> B<span class=\\"token operator\\">=</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d,%d\\\\n\\"</span><span class=\\"token punctuation\\">,</span>A<span class=\\"token punctuation\\">,</span>B<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"P1\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">//\\tP1=10；         //error 符號常量P1不能被賦值</span>\\n\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d,%d\\\\n\\"</span><span class=\\"token punctuation\\">,</span>A<span class=\\"token punctuation\\">,</span>B<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
