const n=JSON.parse('{"key":"v-a8d511d4","path":"/tw/c/pointer-2.html","title":"指針（2）","lang":"zh-TW","frontmatter":{"title":"指針（2）","date":"2022-07-31T00:00:00.000Z","icon":"code","order":15,"description":"67.動態內存分配 //輸入學生數，再輸入每個學生對應的姓名和成績，最後把這些信息輸出 #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; //有nalloc calloc free exit的函數聲明 #include &lt;malloc.h&gt; //alloc calloc free int main(void) { \\tint n; \\tprintf(\\"請輸入學生數：\\"); \\tscanf(\\"%d\\",&amp;n); //\\tvoid *malloc(unsigned int size):其功能是在堆區分配連續的size個字節的存儲空間並且返回這段存儲空間開頭的地址，如果內存分配失敗，會返回空指針 \\tint *p1=(int *)malloc(sizeof(int) *n); //強制數據類型轉換可以省略 \\tif(p1 ==NULL) //判斷是否是空指針 \\t{ \\t\\tprintf(\\"內存分配失敗，程序退出\\\\n\\"); \\texit(-1); \\t} \\t//void *calloc(unsigned int n,unsigned int size); \\tchar (*p2)[50] =(char (*)[50])calloc(n,sizeof(char)*50); \\tif(p2 ==NULL) \\t{ \\t\\tprintf(\\"內存分配失敗，程序退出\\\\n\\"); \\texit(-1); \\t} \\tfor(int i=0;i&lt;n;++i) \\t{ \\t\\tprintf(\\"請輸入第%d個學生的成績和姓名：\\\\n\\",i+1); \\t\\tscanf(\\"%d%s\\",p1+i,p2[i]); \\t} \\tfor(int i =0;i&lt;n;++i) \\t{ \\t\\tprintf(\\"第%d個學生的成績為%d,姓名為%s\\",i+1,p1[i],p2[i]); \\t\\tputs(\\"\\\\n\\"); \\t} \\t//void free(void *p); \\tfree(p1); //釋放動態存儲空間 \\tfree(p2); \\treturn 0; }","head":[["meta",{"property":"og:url","content":"https://passwordgloo-github-io.vercel.app/tw/c/pointer-2.html"}],["meta",{"property":"og:site_name","content":"麦田守望者文档库"}],["meta",{"property":"og:title","content":"指針（2）"}],["meta",{"property":"og:description","content":"67.動態內存分配 //輸入學生數，再輸入每個學生對應的姓名和成績，最後把這些信息輸出 #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; //有nalloc calloc free exit的函數聲明 #include &lt;malloc.h&gt; //alloc calloc free int main(void) { \\tint n; \\tprintf(\\"請輸入學生數：\\"); \\tscanf(\\"%d\\",&amp;n); //\\tvoid *malloc(unsigned int size):其功能是在堆區分配連續的size個字節的存儲空間並且返回這段存儲空間開頭的地址，如果內存分配失敗，會返回空指針 \\tint *p1=(int *)malloc(sizeof(int) *n); //強制數據類型轉換可以省略 \\tif(p1 ==NULL) //判斷是否是空指針 \\t{ \\t\\tprintf(\\"內存分配失敗，程序退出\\\\n\\"); \\texit(-1); \\t} \\t//void *calloc(unsigned int n,unsigned int size); \\tchar (*p2)[50] =(char (*)[50])calloc(n,sizeof(char)*50); \\tif(p2 ==NULL) \\t{ \\t\\tprintf(\\"內存分配失敗，程序退出\\\\n\\"); \\texit(-1); \\t} \\tfor(int i=0;i&lt;n;++i) \\t{ \\t\\tprintf(\\"請輸入第%d個學生的成績和姓名：\\\\n\\",i+1); \\t\\tscanf(\\"%d%s\\",p1+i,p2[i]); \\t} \\tfor(int i =0;i&lt;n;++i) \\t{ \\t\\tprintf(\\"第%d個學生的成績為%d,姓名為%s\\",i+1,p1[i],p2[i]); \\t\\tputs(\\"\\\\n\\"); \\t} \\t//void free(void *p); \\tfree(p1); //釋放動態存儲空間 \\tfree(p2); \\treturn 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-07-31T00:00:00.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://passwordgloo-github-io.vercel.app/c/pointer-2.html"}]]},"headers":[{"level":2,"title":"67.動態內存分配","slug":"_67-動態內存分配","link":"#_67-動態內存分配","children":[]},{"level":2,"title":"68.1realloc函數","slug":"_68-1realloc函數","link":"#_68-1realloc函數","children":[]},{"level":2,"title":"68.2.動態內存空間存儲信息","slug":"_68-2-動態內存空間存儲信息","link":"#_68-2-動態內存空間存儲信息","children":[]},{"level":2,"title":"69.free和realloc函數","slug":"_69-free和realloc函數","link":"#_69-free和realloc函數","children":[]},{"level":2,"title":"70.指針小結","slug":"_70-指針小結","link":"#_70-指針小結","children":[]}],"git":{},"readingTime":{"minutes":5.01,"words":1502},"filePathRelative":"tw/c/pointer-2.md","localizedDate":"2022年7月31日","excerpt":"<h2> 67.動態內存分配</h2>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token comment\\">//輸入學生數，再輸入每個學生對應的姓名和成績，最後把這些信息輸出</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdio.h&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdlib.h&gt;</span>   <span class=\\"token comment\\">//有nalloc calloc free exit的函數聲明</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;malloc.h&gt;</span>   <span class=\\"token comment\\">//alloc calloc free</span></span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">int</span> n<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"請輸入學生數：\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">scanf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">&amp;</span>n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">//\\tvoid *malloc(unsigned int size):其功能是在堆區分配連續的size個字節的存儲空間並且返回這段存儲空間開頭的地址，如果內存分配失敗，會返回空指針</span>\\n\\t<span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">*</span>p1<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span><span class=\\"token function\\">malloc</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span>n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>       <span class=\\"token comment\\">//強制數據類型轉換可以省略</span>\\n\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>p1 <span class=\\"token operator\\">==</span><span class=\\"token constant\\">NULL</span><span class=\\"token punctuation\\">)</span>                                <span class=\\"token comment\\">//判斷是否是空指針</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"內存分配失敗，程序退出\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">exit</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token comment\\">//void *calloc(unsigned int n,unsigned int size);</span>\\n\\t<span class=\\"token keyword\\">char</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>p2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">char</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token function\\">calloc</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">,</span><span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">char</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">*</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>p2 <span class=\\"token operator\\">==</span><span class=\\"token constant\\">NULL</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"內存分配失敗，程序退出\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">exit</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i<span class=\\"token operator\\">=</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>i<span class=\\"token operator\\">&lt;</span>n<span class=\\"token punctuation\\">;</span><span class=\\"token operator\\">++</span>i<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"請輸入第%d個學生的成績和姓名：\\\\n\\"</span><span class=\\"token punctuation\\">,</span>i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token function\\">scanf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d%s\\"</span><span class=\\"token punctuation\\">,</span>p1<span class=\\"token operator\\">+</span>i<span class=\\"token punctuation\\">,</span>p2<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>i<span class=\\"token operator\\">&lt;</span>n<span class=\\"token punctuation\\">;</span><span class=\\"token operator\\">++</span>i<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"第%d個學生的成績為%d,姓名為%s\\"</span><span class=\\"token punctuation\\">,</span>i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>p1<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>p2<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token function\\">puts</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token comment\\">//void free(void *p);</span>\\n\\t<span class=\\"token function\\">free</span><span class=\\"token punctuation\\">(</span>p1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>                                    <span class=\\"token comment\\">//釋放動態存儲空間</span>\\n\\t<span class=\\"token function\\">free</span><span class=\\"token punctuation\\">(</span>p2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
