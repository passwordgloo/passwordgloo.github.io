const n=JSON.parse(`{"key":"v-a5af295a","path":"/c/file-2.html","title":"对文件的输入输出（2）","lang":"zh-CN","frontmatter":{"title":"对文件的输入输出（2）","date":"2022-07-30T00:00:00.000Z","icon":"code","order":18,"description":"81.用二进制的方法读写数据 #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; int main(void) { \\tFILE *p = fopen(\\"H:/Java/Dos命令5.txt\\",\\"rb\\"); //打开方式为r，输出3个ASCII码值，如果打开方式为b,输出4个ASCII码值 \\tif(p == NULL) \\t{ \\t\\tprintf(\\"文件打开失败，程序退出\\\\n\\"); \\t\\texit(-1); \\t} \\tchar ch; \\twhile((ch = fgetc(p) !=EOF)) \\t\\tprintf(\\"%d\\\\n\\",ch); \\tfclose(p); \\treturn 0; } /* 在windows系统下，使用fputs,fputc,fprintf向一个文件写入数据时，如果写入'\\\\n',文件的打开方式为文本模式，实际上写入的是'\\\\r'和'\\\\n'两个字符 如果文件的打开方式为二进制模式，实际就是写入一个'\\\\n'字符 使用fgetc,fgets,fscanf向一个文件读入数据，如果读到'\\\\r'和'\\\\n'，而且文件打开方式为文本模式，会把这两个字符当成一个'\\\\n'读进来 如果文件的打开方式是二进制模式，那么不会发生这种转换，读进来的就是'\\\\n'、'\\\\r' 建议：如果文件本身是一个文本文件，就用文件模式的文件使用方式打开，对这个文件进行读写就用这6个处理字符或者字符串的函数 */","head":[["meta",{"property":"og:url","content":"https://passwordgloo-github-io.vercel.app/c/file-2.html"}],["meta",{"property":"og:site_name","content":"麦田守望者文档库"}],["meta",{"property":"og:title","content":"对文件的输入输出（2）"}],["meta",{"property":"og:description","content":"81.用二进制的方法读写数据 #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; int main(void) { \\tFILE *p = fopen(\\"H:/Java/Dos命令5.txt\\",\\"rb\\"); //打开方式为r，输出3个ASCII码值，如果打开方式为b,输出4个ASCII码值 \\tif(p == NULL) \\t{ \\t\\tprintf(\\"文件打开失败，程序退出\\\\n\\"); \\t\\texit(-1); \\t} \\tchar ch; \\twhile((ch = fgetc(p) !=EOF)) \\t\\tprintf(\\"%d\\\\n\\",ch); \\tfclose(p); \\treturn 0; } /* 在windows系统下，使用fputs,fputc,fprintf向一个文件写入数据时，如果写入'\\\\n',文件的打开方式为文本模式，实际上写入的是'\\\\r'和'\\\\n'两个字符 如果文件的打开方式为二进制模式，实际就是写入一个'\\\\n'字符 使用fgetc,fgets,fscanf向一个文件读入数据，如果读到'\\\\r'和'\\\\n'，而且文件打开方式为文本模式，会把这两个字符当成一个'\\\\n'读进来 如果文件的打开方式是二进制模式，那么不会发生这种转换，读进来的就是'\\\\n'、'\\\\r' 建议：如果文件本身是一个文本文件，就用文件模式的文件使用方式打开，对这个文件进行读写就用这6个处理字符或者字符串的函数 */"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"zh-TW"}],["meta",{"property":"article:published_time","content":"2022-07-30T00:00:00.000Z"}],["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://passwordgloo-github-io.vercel.app/tw/c/file-2.html"}]]},"headers":[{"level":2,"title":"81.用二进制的方法读写数据","slug":"_81-用二进制的方法读写数据","link":"#_81-用二进制的方法读写数据","children":[]},{"level":2,"title":"82.整型是如何在内存中存放的","slug":"_82-整型是如何在内存中存放的","link":"#_82-整型是如何在内存中存放的","children":[]},{"level":2,"title":"83.读写文件的注意事项(1)","slug":"_83-读写文件的注意事项-1","link":"#_83-读写文件的注意事项-1","children":[]},{"level":2,"title":"84.rewind函数","slug":"_84-rewind函数","link":"#_84-rewind函数","children":[]},{"level":2,"title":"85.fseek函数","slug":"_85-fseek函数","link":"#_85-fseek函数","children":[]},{"level":2,"title":"86.文件读写检测——无意义应用","slug":"_86-文件读写检测——无意义应用","link":"#_86-文件读写检测——无意义应用","children":[]},{"level":2,"title":"87.文件读写检测——正确应用","slug":"_87-文件读写检测——正确应用","link":"#_87-文件读写检测——正确应用","children":[]},{"level":2,"title":"88.读写文件的注意事项(2)","slug":"_88-读写文件的注意事项-2","link":"#_88-读写文件的注意事项-2","children":[]}],"git":{},"readingTime":{"minutes":4.7,"words":1409},"filePathRelative":"c/file-2.md","localizedDate":"2022年7月30日","excerpt":"<h2> 81.用二进制的方法读写数据</h2>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdio.h&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdlib.h&gt;</span></span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\tFILE <span class=\\"token operator\\">*</span>p <span class=\\"token operator\\">=</span> <span class=\\"token function\\">fopen</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"H:/Java/Dos命令5.txt\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"rb\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">//打开方式为r，输出3个ASCII码值，如果打开方式为b,输出4个ASCII码值</span>\\n\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>p <span class=\\"token operator\\">==</span> <span class=\\"token constant\\">NULL</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"文件打开失败，程序退出\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token function\\">exit</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">char</span> ch<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">while</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>ch <span class=\\"token operator\\">=</span> <span class=\\"token function\\">fgetc</span><span class=\\"token punctuation\\">(</span>p<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">!=</span><span class=\\"token constant\\">EOF</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d\\\\n\\"</span><span class=\\"token punctuation\\">,</span>ch<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">fclose</span><span class=\\"token punctuation\\">(</span>p<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">/*\\n在windows系统下，使用fputs,fputc,fprintf向一个文件写入数据时，如果写入'\\\\n',文件的打开方式为文本模式，实际上写入的是'\\\\r'和'\\\\n'两个字符\\n如果文件的打开方式为二进制模式，实际就是写入一个'\\\\n'字符\\n\\n\\n使用fgetc,fgets,fscanf向一个文件读入数据，如果读到'\\\\r'和'\\\\n'，而且文件打开方式为文本模式，会把这两个字符当成一个'\\\\n'读进来\\n如果文件的打开方式是二进制模式，那么不会发生这种转换，读进来的就是'\\\\n'、'\\\\r'\\n\\n建议：如果文件本身是一个文本文件，就用文件模式的文件使用方式打开，对这个文件进行读写就用这6个处理字符或者字符串的函数\\n\\n*/</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
