const n=JSON.parse('{"key":"v-63b494e0","path":"/tw/c/type.html","title":"用戶自定義數據類型","lang":"zh-TW","frontmatter":{"title":"用戶自定義數據類型","date":"2022-07-30T00:00:00.000Z","icon":"code","order":16,"description":"71.結構體的定義和初始化 #include &lt;stdio.h&gt; //結構體定義總結：結構體標記和變量名至少有壹種，如果有變量。可以進行初始化 struct Student //1.定義時為結構體起壹個結構體標記名 { \\tchar name[30]; \\tint age; \\tdouble score; }; struct Student2 //2.定義時為結構體起壹個結構體標記名並定義這種數據類型的變量 { \\tchar name[30]; \\tint age; \\tdouble score; }A,*p; struct Student3 //3.定義時為結構體起壹個結構體標記名並為變量初始化 { \\tchar name[30]; \\tint age; \\tdouble score; }A1={\\"張三\\",23},*p1; struct //4.只定義結構體類型的變量 { \\tchar name[30]; \\tint age; \\tdouble score; }A2,*p2; void f(void); int main(void) {\\t \\tf(); \\tstruct Student a ={\\"張三\\",28,34}; //①完全初始化 \\tstruct Student b ={\\"張三\\",28}; //②部分初始化 \\tstruct Student c = a; //③定義結構體變量時，使用其他的結構體變量完成初始化 \\tstruct Student d ={.score = 23}; //④c99支持這種形式在定義壹個定義壹個結構體變量時，對其某壹個成員初始化 \\tprintf(\\"學生的姓名：%s，年齡：%d,成績：%lf\\",c.name,c.age,c.score); \\treturn 0; } void f(void) { \\tstruct Student a; \\tprintf(\\"請輸入學生的姓名、年齡和成績\\\\n\\"); \\tscanf(\\"%s%d%lf\\",&amp;a.name,&amp;a.age,&amp;a.score); \\tprintf(\\"學生的姓名：%s，年齡：%d,成績：%lf\\",a.name,a.age,a.score); //①可以通過 變量名.成員名的方式訪問壹個結構體變量的成員 \\tstruct Student *p =&amp;a; \\tprintf(\\"學生的姓名：%s，年齡：%d,成績：%lf\\",p-&gt;name,p-&gt;age,p-&gt;score); //②可以通過 指針-&gt;成員名 的方式訪問壹個結構體變量的成員 }","head":[["meta",{"property":"og:url","content":"https://passwordgloo-github-io.vercel.app/tw/c/type.html"}],["meta",{"property":"og:site_name","content":"麦田守望者文档库"}],["meta",{"property":"og:title","content":"用戶自定義數據類型"}],["meta",{"property":"og:description","content":"71.結構體的定義和初始化 #include &lt;stdio.h&gt; //結構體定義總結：結構體標記和變量名至少有壹種，如果有變量。可以進行初始化 struct Student //1.定義時為結構體起壹個結構體標記名 { \\tchar name[30]; \\tint age; \\tdouble score; }; struct Student2 //2.定義時為結構體起壹個結構體標記名並定義這種數據類型的變量 { \\tchar name[30]; \\tint age; \\tdouble score; }A,*p; struct Student3 //3.定義時為結構體起壹個結構體標記名並為變量初始化 { \\tchar name[30]; \\tint age; \\tdouble score; }A1={\\"張三\\",23},*p1; struct //4.只定義結構體類型的變量 { \\tchar name[30]; \\tint age; \\tdouble score; }A2,*p2; void f(void); int main(void) {\\t \\tf(); \\tstruct Student a ={\\"張三\\",28,34}; //①完全初始化 \\tstruct Student b ={\\"張三\\",28}; //②部分初始化 \\tstruct Student c = a; //③定義結構體變量時，使用其他的結構體變量完成初始化 \\tstruct Student d ={.score = 23}; //④c99支持這種形式在定義壹個定義壹個結構體變量時，對其某壹個成員初始化 \\tprintf(\\"學生的姓名：%s，年齡：%d,成績：%lf\\",c.name,c.age,c.score); \\treturn 0; } void f(void) { \\tstruct Student a; \\tprintf(\\"請輸入學生的姓名、年齡和成績\\\\n\\"); \\tscanf(\\"%s%d%lf\\",&amp;a.name,&amp;a.age,&amp;a.score); \\tprintf(\\"學生的姓名：%s，年齡：%d,成績：%lf\\",a.name,a.age,a.score); //①可以通過 變量名.成員名的方式訪問壹個結構體變量的成員 \\tstruct Student *p =&amp;a; \\tprintf(\\"學生的姓名：%s，年齡：%d,成績：%lf\\",p-&gt;name,p-&gt;age,p-&gt;score); //②可以通過 指針-&gt;成員名 的方式訪問壹個結構體變量的成員 }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-07-30T00:00:00.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://passwordgloo-github-io.vercel.app/c/type.html"}]]},"headers":[{"level":2,"title":"71.結構體的定義和初始化","slug":"_71-結構體的定義和初始化","link":"#_71-結構體的定義和初始化","children":[]},{"level":2,"title":"72.1結構體變量所占字節長度","slug":"_72-1結構體變量所占字節長度","link":"#_72-1結構體變量所占字節長度","children":[]},{"level":2,"title":"72.2結構體數組和指針","slug":"_72-2結構體數組和指針","link":"#_72-2結構體數組和指針","children":[]},{"level":2,"title":"72.3復雜的數據類型","slug":"_72-3復雜的數據類型","link":"#_72-3復雜的數據類型","children":[]},{"level":2,"title":"73.typedef","slug":"_73-typedef","link":"#_73-typedef","children":[]},{"level":2,"title":"74.單向動態鏈表","slug":"_74-單向動態鏈表","link":"#_74-單向動態鏈表","children":[]},{"level":2,"title":"75.共用體的定義和變量初始化","slug":"_75-共用體的定義和變量初始化","link":"#_75-共用體的定義和變量初始化","children":[]},{"level":2,"title":"76.枚舉類型","slug":"_76-枚舉類型","link":"#_76-枚舉類型","children":[]}],"git":{},"readingTime":{"minutes":6.31,"words":1893},"filePathRelative":"tw/c/type.md","localizedDate":"2022年7月30日","excerpt":"<h2> 71.結構體的定義和初始化</h2>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdio.h&gt;</span></span>\\n                                               <span class=\\"token comment\\">//結構體定義總結：結構體標記和變量名至少有壹種，如果有變量。可以進行初始化</span>\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Student</span>                                 <span class=\\"token comment\\">//1.定義時為結構體起壹個結構體標記名</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">char</span> name<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">30</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">int</span> age<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">double</span> score<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Student2</span>                                 <span class=\\"token comment\\">//2.定義時為結構體起壹個結構體標記名並定義這種數據類型的變量</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">char</span> name<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">30</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">int</span> age<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">double</span> score<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>A<span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">*</span>p<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Student3</span>                                 <span class=\\"token comment\\">//3.定義時為結構體起壹個結構體標記名並為變量初始化</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">char</span> name<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">30</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">int</span> age<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">double</span> score<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>A1<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">\\"張三\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">23</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">*</span>p1<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">struct</span>                                 <span class=\\"token comment\\">//4.只定義結構體類型的變量</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">char</span> name<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">30</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">int</span> age<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">double</span> score<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>A2<span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">*</span>p2<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">f</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\t\\n\\t<span class=\\"token function\\">f</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Student</span> a <span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">\\"張三\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">28</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">34</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>      <span class=\\"token comment\\">//①完全初始化</span>\\n\\t<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Student</span> b <span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">\\"張三\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">28</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>          <span class=\\"token comment\\">//②部分初始化</span>\\n\\t<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Student</span> c <span class=\\"token operator\\">=</span> a<span class=\\"token punctuation\\">;</span>                    <span class=\\"token comment\\">//③定義結構體變量時，使用其他的結構體變量完成初始化</span>\\n\\t<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Student</span> d <span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">.</span>score <span class=\\"token operator\\">=</span> <span class=\\"token number\\">23</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>         <span class=\\"token comment\\">//④c99支持這種形式在定義壹個定義壹個結構體變量時，對其某壹個成員初始化</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"學生的姓名：%s，年齡：%d,成績：%lf\\"</span><span class=\\"token punctuation\\">,</span>c<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span>c<span class=\\"token punctuation\\">.</span>age<span class=\\"token punctuation\\">,</span>c<span class=\\"token punctuation\\">.</span>score<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> \\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">f</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Student</span> a<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"請輸入學生的姓名、年齡和成績\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">scanf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%s%d%lf\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">&amp;</span>a<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">&amp;</span>a<span class=\\"token punctuation\\">.</span>age<span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">&amp;</span>a<span class=\\"token punctuation\\">.</span>score<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"學生的姓名：%s，年齡：%d,成績：%lf\\"</span><span class=\\"token punctuation\\">,</span>a<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span>a<span class=\\"token punctuation\\">.</span>age<span class=\\"token punctuation\\">,</span>a<span class=\\"token punctuation\\">.</span>score<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>              <span class=\\"token comment\\">//①可以通過 變量名.成員名的方式訪問壹個結構體變量的成員</span>\\n\\t<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Student</span> <span class=\\"token operator\\">*</span>p <span class=\\"token operator\\">=</span><span class=\\"token operator\\">&amp;</span>a<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"學生的姓名：%s，年齡：%d,成績：%lf\\"</span><span class=\\"token punctuation\\">,</span>p<span class=\\"token operator\\">-&gt;</span>name<span class=\\"token punctuation\\">,</span>p<span class=\\"token operator\\">-&gt;</span>age<span class=\\"token punctuation\\">,</span>p<span class=\\"token operator\\">-&gt;</span>score<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>          <span class=\\"token comment\\">//②可以通過 指針-&gt;成員名 的方式訪問壹個結構體變量的成員</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
