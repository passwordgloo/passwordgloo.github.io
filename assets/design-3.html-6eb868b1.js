const n=JSON.parse('{"key":"v-09d945f6","path":"/tw/c/design-3.html","title":"程序設計和C語言（3）","lang":"zh-TW","frontmatter":{"title":"程序設計和C語言（3）","date":"2022-07-30T00:00:00.000Z","icon":"code","order":3,"description":"10.初等運算符及單目運算符 優先級、操作數、結合方向--初等運算符優先級為1，單目運算符優先級為2 只有單目運算符和賦值運算符的結合方向是自右往左的 #include &lt;stdio.h&gt; int main() { \\t//概念理解 \\tprintf(\\"%d,%d\\\\n\\",1+2*3,(1+2)*3); \\tint a = 1,b = 2,c = 3; \\tprintf(\\"%d\\\\n\\",a); //學習目標（2） \\t//！邏輯非運算符，求該操作數的邏輯反值，如果該操作數值為真，則整個表達式為假，否則整個表達式值為真 \\tprintf(\\"%d,%d,%d\\\\n\\",!1,!9,!0); //輸出0，0，1 \\t \\t//-負號運算符 \\tprintf(\\"%d\\\\n\\",4*-3); //乘號比負號的優先級低，括號可以省略 \\treturn 0; }","head":[["meta",{"property":"og:url","content":"https://passwordgloo-github-io.vercel.app/tw/c/design-3.html"}],["meta",{"property":"og:site_name","content":"麦田守望者文档库"}],["meta",{"property":"og:title","content":"程序設計和C語言（3）"}],["meta",{"property":"og:description","content":"10.初等運算符及單目運算符 優先級、操作數、結合方向--初等運算符優先級為1，單目運算符優先級為2 只有單目運算符和賦值運算符的結合方向是自右往左的 #include &lt;stdio.h&gt; int main() { \\t//概念理解 \\tprintf(\\"%d,%d\\\\n\\",1+2*3,(1+2)*3); \\tint a = 1,b = 2,c = 3; \\tprintf(\\"%d\\\\n\\",a); //學習目標（2） \\t//！邏輯非運算符，求該操作數的邏輯反值，如果該操作數值為真，則整個表達式為假，否則整個表達式值為真 \\tprintf(\\"%d,%d,%d\\\\n\\",!1,!9,!0); //輸出0，0，1 \\t \\t//-負號運算符 \\tprintf(\\"%d\\\\n\\",4*-3); //乘號比負號的優先級低，括號可以省略 \\treturn 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-07-30T00:00:00.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://passwordgloo-github-io.vercel.app/c/design-3.html"}]]},"headers":[{"level":2,"title":"10.初等運算符及單目運算符","slug":"_10-初等運算符及單目運算符","link":"#_10-初等運算符及單目運算符","children":[]},{"level":2,"title":"11.算術運算符及賦值運算符","slug":"_11-算術運算符及賦值運算符","link":"#_11-算術運算符及賦值運算符","children":[]},{"level":2,"title":"12.逗號，關系及邏輯運算符","slug":"_12-逗號-關系及邏輯運算符","link":"#_12-逗號-關系及邏輯運算符","children":[]},{"level":2,"title":"13.條件運算符","slug":"_13-條件運算符","link":"#_13-條件運算符","children":[]}],"git":{},"readingTime":{"minutes":4.19,"words":1256},"filePathRelative":"tw/c/design-3.md","localizedDate":"2022年7月30日","excerpt":"<h2> 10.初等運算符及單目運算符</h2>\\n<blockquote>\\n<ol>\\n<li>優先級、操作數、結合方向--初等運算符優先級為1，單目運算符優先級為2</li>\\n<li>只有單目運算符和賦值運算符的結合方向是自右往左的</li>\\n</ol>\\n</blockquote>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdio.h&gt;</span></span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token comment\\">//概念理解</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d,%d\\\\n\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">1</span><span class=\\"token operator\\">+</span><span class=\\"token number\\">2</span><span class=\\"token operator\\">*</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token operator\\">+</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">*</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">int</span> a <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>b <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span>c <span class=\\"token operator\\">=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d\\\\n\\"</span><span class=\\"token punctuation\\">,</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>         <span class=\\"token comment\\">//學習目標（2）</span>\\n\\n\\n\\t<span class=\\"token comment\\">//！邏輯非運算符，求該操作數的邏輯反值，如果該操作數值為真，則整個表達式為假，否則整個表達式值為真</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d,%d,%d\\\\n\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">!</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">!</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">!</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">//輸出0，0，1</span>\\n\\t\\n\\t<span class=\\"token comment\\">//-負號運算符</span>\\n\\t<span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d\\\\n\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">4</span><span class=\\"token operator\\">*</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>            <span class=\\"token comment\\">//乘號比負號的優先級低，括號可以省略</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
