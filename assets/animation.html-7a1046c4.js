import{_ as n,V as a,W as s,X as t}from"./framework-1e9ccf99.js";const e={},i=t(`<h2 id="定義動畫" tabindex="-1"><a class="header-anchor" href="#定義動畫" aria-hidden="true">#</a> 定義動畫</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>&lt;!-- 兩種狀態動畫 --&gt;
<span class="token atrule"><span class="token rule">@keyframes</span> 動畫名稱</span> <span class="token punctuation">{</span>
  <span class="token selector">from</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token selector">to</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
&lt;!-- 多個屬性變化 --&gt;
<span class="token atrule"><span class="token rule">@keyframes</span> 動畫名稱</span> <span class="token punctuation">{</span>
	<span class="token selector">0%</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token selector">10%</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token selector">40%</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token selector">100%</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用動畫" tabindex="-1"><a class="header-anchor" href="#使用動畫" aria-hidden="true">#</a> 使用動畫</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation</span><span class="token punctuation">:</span>動畫名稱 動畫花費時長
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="動畫屬性" tabindex="-1"><a class="header-anchor" href="#動畫屬性" aria-hidden="true">#</a> 動畫屬性</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation</span><span class="token punctuation">:</span>動畫名稱 動畫時長 速度曲線 延遲時間 重復次數 動畫方向 執行完畢時狀態<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>屬性</th><th>作用</th><th>取值</th></tr></thead><tbody><tr><td>animation-name</td><td>動畫名稱</td><td></td></tr><tr><td>animation-duration</td><td>動畫時長</td><td></td></tr><tr><td>animation-delay</td><td>延遲時間</td><td></td></tr><tr><td>animation-fill-mode</td><td>動畫執行完畢時狀態</td><td>forwards:最後壹幀<br>backwards:第壹幀狀態</td></tr><tr><td>animation-timing-function</td><td>速度曲線</td><td>steps(數字):逐幀動畫</td></tr><tr><td>animation-iteration-count</td><td>重復次數</td><td>infinite為無限</td></tr><tr><td>animation-direction</td><td>動畫執行方向</td><td>alternate反方向</td></tr><tr><td>animation-play-state</td><td>暫停動畫</td><td>paused暫停，通常配合<code>:hover</code>使用</td></tr></tbody></table><ul><li><p>動畫名稱和動畫時長必須賦值</p></li><li><p>取值不分先後順序</p></li><li><p>如果有兩個時間值，第壹個時間表示動畫時長，第二個時間表示延遲時間</p></li></ul>`,8),d=[i];function c(l,o){return a(),s("div",null,d)}const r=n(e,[["render",c],["__file","animation.html.vue"]]);export{r as default};
